/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-10-25 11:13:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.templates;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.chainsys.core.vo.UserProfileVO;
import com.chainsys.appplatform.web.util.SessionManager;
import com.chainsys.appplatform.json.JSONUtils;
import java.util.Locale;

public final class AppMenu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.chainsys.appplatform.web.util.SessionManager");
    _jspx_imports_classes.add("java.util.Locale");
    _jspx_imports_classes.add("com.chainsys.appplatform.json.JSONUtils");
    _jspx_imports_classes.add("com.chainsys.core.vo.UserProfileVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
 
SessionManager sessionManager = SessionManager.getInstance(request,response);
String loggedUserApp = ((String) pageContext.getSession().getAttribute("LOGGED_USER_APPLICATIONS"));
UserProfileVO profileVO = (UserProfileVO)sessionManager.getAttribute("USER_PROFILE");
String  applicationId = pageContext.getSession().getAttribute("CURRENT_APPLICATION_ID").toString();
String menuList=new JSONUtils(profileVO).objectToJson(sessionManager.getAttribute("menuList_"+profileVO.getLoggedUserId()+"_"+applicationId));
String releaseVersion = pageContext.getSession().getAttribute("RELEASE_VERSION").toString();
Locale locale = profileVO.getUserLocale();
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var userApplications = ");
      out.print(loggedUserApp);
      out.write(";\r\n");
      out.write("var sideMenuData = ");
      out.print(menuList);
      out.write(";\r\n");
      out.write("var currentApplicationId=");
      out.print(applicationId);
      out.write(";\r\n");
      out.write("var version = '");
      out.print(releaseVersion);
      out.write("';\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"../js/plugins/newWaterfall.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<script src=\"../js/cs-appswitch-appmenu.js\" type=\"text/javascript\"></script>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write(" \r\n");
      out.write("<nav> \r\n");
      out.write("\t\t<div class=\"cs-mg-top clearfix cs-flex\">\r\n");
      out.write("\t\t\t<div class=\"cs-cell-8f cs-flex\">\r\n");
      out.write("\t\t\t\t<div class=\"cs-mg-app-img cs-pull-left cs-lmar\">\r\n");
      out.write("\t\t\t\t\t<img src=\"\"/>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"cs-mg-app-name-ver cs-lmar\">\r\n");
      out.write("\t\t\t\t\t<div class=\"cs-lmar\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"cs-mg-app-name cs-ts-14\">Version</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"cs-mg-app-ver cs-tsmar\">\r\n");
      out.write("\t\t\t\t\t\t\t<span class=\"cs-ts-12\"></span>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"cs-cell-8f cs-flex cs-row-center\">\r\n");
      out.write("\t\t\t\t<div class=\"cs-mg-tab\">\r\n");
      out.write("\t\t\t\t\t<div id=\"cs_menu\" class=\"cs-inline cs-mg-tab-each cs-mg-tab-menu active\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-mg-tab-ico\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"icon-cs-list\"></i>\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-mg-tab-name\">Menu</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"cs_application\" class=\"cs-inline cs-lmar cs-mg-tab-each cs-mg-tab-app\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-mg-tab-ico\">\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"icon-cs-application\"></i>\r\n");
      out.write("\t\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-mg-tab-name\">Application</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"cs-cell-8f cs-flex\">\r\n");
      out.write("\t\t\t\t<div class=\"cs-input cs-mg-search\">\r\n");
      out.write("\t\t\t\t\t<input id=\"cs_menusearch\" type=\"text\" placeholder=\"Search here\"/>\r\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"cs-lookup\"><i class=\"icon-cs-search\"></i></a>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"clearfix cs-mg-tab-cont\">\r\n");
      out.write("\t\t\t<div class=\"clearfix cs-hpad cs-bpad cs-mg-app-typs\">\r\n");
      out.write("\t\t\t\t<div class=\"cs-flex cs-row-right cs-column-middle\">\r\n");
      out.write("\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-standard cs-hmar cs-hpad cs-pr cs-graylightc cs-ts-12\">Standard App</span>\r\n");
      out.write("\t\t\t\t\t\t<span class=\"cs-custom cs-hmar cs-hpad cs-pr cs-graylightc cs-ts-12\">Custom App</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<span class=\"cs-ts-14 cs-rsmar\">Categories</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"cmn-toggle cs-cmn-toggle-round-flat\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" hidefocus=\"\" class=\"editor-checkbox\" id=\"cmn-toggle-5\" value=\"true\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"cmn-toggle-5\" class=\"cs-inline cs-valignm\"></label>\r\n");
      out.write("\t\t\t\t\t</span>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"clearfix cs-mg-app-list cs-scroll-2 cs-pr\"></div>\r\n");
      out.write("\t\t\t<div class=\"clearfix cs-mg-menu-list cs-scroll-2 cs-pr\">\r\n");
      out.write("\t\t\t\t<ul class=\"cs-mg-menu-ul\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</nav>\r\n");
      out.write("<!-- \t<script src=\"../../js/default-theme/cs-appswitch-appmenu.js\" type=\"text/javascript\"></script>\r\n");
      out.write(" --></body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
